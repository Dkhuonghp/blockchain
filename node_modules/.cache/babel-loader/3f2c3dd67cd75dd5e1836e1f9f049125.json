{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _context = _interopRequireDefault(require(\"../Utils/context\"));\n\nvar _Layer2 = _interopRequireDefault(require(\"./Layer\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar AppearLayer = /*#__PURE__*/function (_Layer) {\n  _inherits(AppearLayer, _Layer);\n\n  function AppearLayer(props) {\n    var _this;\n\n    _classCallCheck(this, AppearLayer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AppearLayer).call(this, props));\n    ['in', 'duration', 'delay', 'loop'].forEach(function (setting) {\n      _this.settings = _objectSpread({}, _this.settings, _defineProperty({}, setting, props[setting]));\n    });\n    return _this;\n  }\n\n  _createClass(AppearLayer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.context.addAppearLayer(this);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.context.removeAppearLayer(this);\n    }\n  }]);\n\n  return AppearLayer;\n}(_Layer2[\"default\"]);\n\nexports[\"default\"] = AppearLayer;\nAppearLayer.contextType = _context[\"default\"];","map":{"version":3,"sources":["../../src/Components/AppearLayer.js"],"names":["AppearLayer","Layer","props","Context"],"mappings":";;;;;;;AAAA,IAAA,QAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,kBAAA,CAAA,CAAA;;AACA,IAAA,OAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEqBA,W;;;EACnB,SAAA,WAAA,CAAA,KAAA,EAAmB;IAAA,IAAA,KAAA;;IAAA,eAAA,CAAA,IAAA,EAAA,WAAA,CAAA;;IACjB,KAAA,GAAA,0BAAA,CAAA,IAAA,EAAA,eAAA,CAAA,WAAA,CAAA,CAAA,IAAA,CAAA,IAAA,EAAA,KAAA,CAAA,CAAA;IAEA,CAAA,IAAA,EAAA,UAAA,EAAA,OAAA,EAAA,MAAA,EAAA,OAAA,CAA4C,UAAA,OAAA,EAAW;MACrD,KAAA,CAAA,QAAA,GAAA,aAAA,CAAA,EAAA,EACK,KAAA,CADL,QAAA,EAAA,eAAA,CAAA,EAAA,EAAA,OAAA,EAEaE,KAAK,CAFlB,OAEkB,CAFlB,CAAA,CAAA;IADF,CAAA;IAHiB,OAAA,KAAA;EASlB;;;;wCAEmB;MAClB,KAAA,OAAA,CAAA,cAAA,CAAA,IAAA;IACD;;;2CAEsB;MACrB,KAAA,OAAA,CAAA,iBAAA,CAAA,IAAA;IACD;;;;EAlBsCD,OAAAA,CAAAA,SAAAA,C;;;AAqBzCD,WAAW,CAAXA,WAAAA,GAA0BG,QAAAA,CAA1BH,SAA0BG,CAA1BH","sourcesContent":["import Context from '../Utils/context';\nimport Layer from './Layer';\n\nexport default class AppearLayer extends Layer {\n  constructor(props) {\n    super(props);\n\n    ['in', 'duration', 'delay', 'loop'].forEach(setting => {\n      this.settings = {\n        ...this.settings,\n        [setting]: props[setting]\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.context.addAppearLayer(this);\n  }\n\n  componentWillUnmount() {\n    this.context.removeAppearLayer(this);\n  }\n}\n\nAppearLayer.contextType = Context;"]},"metadata":{},"sourceType":"script"}